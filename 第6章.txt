对被测软件总体评估
从上一节的 测试结果中可以看到，除了gazebo模拟器稳定性造成的错误外，大部分测试结果与预期一致。机器人基本实现预期功能，GUI软件基本简洁实用。软件整体实现达到预期功能需求与非功能需求。
在测试T101TC02中，发现若使用GUI对机器人自助行走进行控制时，若连续发出指令，机器人会出现卡顿。但若采用键盘进行控制，则不会出现卡顿。我们认为该问题可能由于GUI向模拟器中机器人传输信息效率较低造成，但该问题对整体机器人整体功能影响较小。


测试环境影响：
本文档中采用gazebo模拟器作为测试环境，主体使用课程组提供的demo[insert number]进行测试。因此gazebo模拟器和环境demo中的问题都对测试有较大影响。
首先，gazebo开启时的不稳定性可能造成建图失败。[please elaborate….]
而且，环境中的问题也会对测试产生影响。比如当我们使用demo1进行测试的时候，就会出现机器如穿墙，或者机器人推着沙发走的现象。但改用最新版demo[insert number]后，由于demo本身比较稳定，就不会出现异常现象。

改进建议：
（1）	添加对gazebo环境不稳定所造成的无法建图的异常处理：发出建图指令后，每隔[时间间隔] 检测是否生成地图。若[时间间隔]后让没，有生成地图，则重启GUI。目前已完成该部分改进。
（2）	提高GUI美观性：目前GUI用tkinker制作，但由于tkinker和建图、导航控制软件rviz结合不好，导致GUI界面不美观。可以考虑将GUI用pyqt制作，从而更好的和rviz结合，生成更美观界面。目前为安排该部分改进，由于时间较为紧张，重写GUI工作量较大。后期若有空闲，考虑实现。
（3）	动态规划避障路径：在导航过程中，虽运动过程中能避免撞击障碍物，但是执行的操作是停在原地等待一段时间。假若能使用一定的算法动态生成一条绕开障碍物的导航路线到达目的地，则能提升机器人的运行效率。目前在学习该部分技术，后续尝试实现。
